document.addEventListener('DOMContentLoaded', function() {
    const apiKey = '72175e911f70b5793a1eae6a4f7f8f3b';
    const searchButton = document.getElementById('searchButton');
  
    // Mapeamento de c√≥digos de condi√ß√£o clim√°tica para descri√ß√µes mais amig√°veis e emojis correspondentes
    const weatherConditions = {
      'clear': {
        description: 'C√©u limpo',
        emoji: '‚òÄÔ∏è',
        backgroundColor: 'yellow',
        textColor: 'black' // Adiciona a cor do texto para condi√ß√£o de c√©u limpo
      },
      'clouds': {
        description: 'Nublado',
        emoji: '‚òÅÔ∏è',
        backgroundColor: 'gray',
        textColor: 'white' // Adiciona a cor do texto para condi√ß√£o de nublado
      },
      'rain': {
        description: 'Chuva',
        emoji: 'üåßÔ∏è',
        backgroundColor: 'blue',
        textColor: 'white' // Adiciona a cor do texto para condi√ß√£o de chuva
      },
      'thunderstorm': {
        description: 'Tempestade',
        emoji: '‚õàÔ∏è',
        backgroundColor: 'blue',
        textColor: 'white' // Adiciona a cor do texto para condi√ß√£o de tempestade
      },
      'drizzle': {
        description: 'Chuvisco',
        emoji: 'üå¶Ô∏è',
        backgroundColor: 'blue',
        textColor: 'white' // Adiciona a cor do texto para condi√ß√£o de chuvisco
      },
      'snow': {
        description: 'Neve',
        emoji: '‚ùÑÔ∏è',
        backgroundColor: 'white',
        textColor: 'black' // Adiciona a cor do texto para condi√ß√£o de neve
      },
      'mist': {
        description: 'Neblina',
        emoji: 'üå´Ô∏è',
        backgroundColor: 'lightgray',
        textColor: 'black' // Adiciona a cor do texto para condi√ß√£o de neblina
      }
      // Adicione outras condi√ß√µes clim√°ticas conforme necess√°rio
    };
  
    searchButton.addEventListener('click', function() {
      const cityInput = document.getElementById('cityInput').value;
      if (cityInput) {
        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityInput}&appid=${apiKey}&units=metric`)
          .then(response => {
            if (!response.ok) {
              throw new Error('Erro na solicita√ß√£o √† API.');
            }
            return response.json();
          })
          .then(data => {
            console.log('Dados recebidos:', data);
            if (data.cod === 200) {
              const temperature = data.main.temp;
              const conditionCode = data.weather[0].main.toLowerCase(); // Obt√©m o c√≥digo de condi√ß√£o clim√°tica e converte para min√∫sculas
              const condition = weatherConditions[conditionCode] || { description: 'Desconhecido', emoji: '', backgroundColor: 'white', textColor: 'black' }; // Verifica se h√° uma descri√ß√£o correspondente no mapeamento
              const weatherDiv = document.getElementById('weather');
              weatherDiv.innerHTML = `Temperatura: ${temperature}¬∞C, Condi√ß√£o: ${condition.emoji} ${condition.description}`;
              document.body.style.backgroundColor = condition.backgroundColor; // Define a cor de fundo da p√°gina com base na condi√ß√£o clim√°tica
              document.body.style.color = condition.textColor; // Define a cor do texto com base na condi√ß√£o clim√°tica
            } else {
              throw new Error('Cidade n√£o encontrada ou problema na resposta da API.');
            }
          })
          .catch(error => {
            console.error('Erro ao obter dados meteorol√≥gicos:', error);
            const weatherDiv = document.getElementById('weather');
            weatherDiv.innerHTML = 'Erro ao obter dados meteorol√≥gicos';
          });
      } else {
        alert('Por favor, insira o nome da cidade.');
      }
    });
  });
